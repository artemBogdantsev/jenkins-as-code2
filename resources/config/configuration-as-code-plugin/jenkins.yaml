---
jenkins:
  systemMessage: "Powered automagically by Groovy and Configuration-as-Code Plugin\n\n"
  numExecutors: 5

  crumbIssuer: 
    standard:
      excludeClientIPFromCrumb: false

  remotingSecurity:
    enabled: true

  globalNodeProperties:
    - envVars:
        env:
          - key: "MY_DEBUG"
            value: "True"

  authorizationStrategy:
    globalMatrix:
      grantedPermissions:
        - "Overall/Read:anonymous"
        - "Job/Read:anonymous"
        - "View/Read:anonymous"
        - "Overall/Administer:jenkins"
        - "Overall/Administer:AdminLDAP, Admin"
#        - "Overall/Administer:ladmin"

#  securityRealm:
#    ldap:
#      configurations:
#        - groupMembershipStrategy:
#            fromUserRecord:
#              attributeName: "memberOf"
#          inhibitInferRootDN: false
#          rootDN: "dc=test,dc=example,dc=org"
#          server: "ldap://...:389"
#          managerDN: "cn=admin,cn=config"
#          managerPasswordSecret: "superldappass"
#      cache:
#        size: 100
#        ttl: 10
#      userIdStrategy: CaseSensitive
#      groupIdStrategy: CaseSensitive

  clouds:
    - kubernetes:
        name: "kubernetes"
        serverUrl: "https://172.17.0.3:6443"
        serverCertificate: "serverCertificate"
        skipTlsVerify: true
        credentialsId: "k8s-token"
        namespace: "devops-tools"
        jenkinsUrl: "http://jenkins-jenkins-as-code:80/"
        jenkinsTunnel: "jenkins-jenkins-as-code:50000"
        containerCapStr: 42 # Max number of agent containers that Kubernetes is allowed to run from Jenkins
        maxRequestsPerHostStr: 64
        retentionTimeout: 5
        connectTimeout: 10
        readTimeout: 20

security:
  globalJobDslSecurityConfiguration:
    useScriptSecurity: false
  remotingCLI:
    enabled: false
  sSHD:
    port: 6666

credentials:
  system:
    domainCredentials:
      - credentials:
          #######
          # User Auth
          #######
          - usernamePassword:
              scope: "GLOBAL"
              id: "gitlab-ci-user"
              description: "GitLab CI User Credentials"
              username: "${jenkins-basic-auth-credentials/gitlab-ci-user}"
              password: "${jenkins-basic-auth-credentials/gitlab-ci-password}"
          - usernamePassword:
              scope: "GLOBAL"
              id: "docker-registry-user"
              description: "Internal Docker Registry User Credentials"
              username: "${jenkins-basic-auth-credentials/registry-user}"
              password: "${jenkins-basic-auth-credentials/registry-password}"
          ########
          # Tokens
          ########
          - string:
              scope: "GLOBAL"
              id: "slack-token"
              description: "Slack Access Token"
              secret: "${jenkins-tokens/slack-token}"
          - string:
              scope: "GLOBAL"
              id: "gitlab-ci-token"
              description: "GitLab CI Token"
              secret: "${jenkins-tokens/gitlab-ci-token}"
          - string:
              scope: "GLOBAL"
              id: "k8s-token"
              description: "K8s Token"
              secret: "${jenkins-tokens/k8s-token}"
          ########
          # SSH Keys
          ########
          - basicSSHUserPrivateKey:
              scope: "GLOBAL"
              id: "deploy-key-shared-library"
              username: "jenkins"
              passphrase: ""
              description: "Deploy key for global shared library"
              privateKeySource:
                directEntry:
                  privateKey: "${jenkins-ssh-keys/deploy-key-shared-library}"
          - basicSSHUserPrivateKey:
              scope: "GLOBAL"
              id: "ssh-agent-access-key"
              username: "ubuntu"
              passphrase: ""
              description: "SSH key to access agents"
              privateKeySource:
                directEntry:
                  privateKey: "${jenkins-ssh-keys/ssh-agent-access-key}"

unclassified:
  location:
    url: "http://jenkins-jenkins-as-code.devops-tools/"
    adminAddress: "a@b.t"

  globalLibraries:
    libraries:
      - name: "jenkins-as-code"
        retriever:
          modernSCM:
            scm:
              git:
                remote: "git@172.17.0.1:devops/jenkins-as-code.git"
                credentialsId: "deploy-key-shared-library"
      - name: "ansible-installer"
        retriever:
          modernSCM:
            scm:
              git:
                remote: "git@172.17.0.1:devops/ansible-installer.git"
                credentialsId: "gitlab-ci-user"

  simple-theme-plugin:
    elements:
      - cssUrl:
          url: "/userContent/layout/custom.css"
          #url: "https://afonsof.com/jenkins-material-theme/dist/material-teal.css"

  slackNotifier:
    teamDomain: "A-team"
    baseUrl: "https://???.slack.com/services/hooks/jaac/"
    tokenCredentialId: "slack-token"